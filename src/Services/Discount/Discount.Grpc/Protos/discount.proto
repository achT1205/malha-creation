syntax = "proto3";

option csharp_namespace = "Discount.Grpc";

package discount;

// The discount service definition.
service DiscountProtoService {
  rpc GetCouponForProduct (GetCouponForProductRequest) returns (GetCouponForProductResponse);
  rpc GetBasketDiscount (GetBasketDiscountRequest) returns (GetBasketDiscountResponse);

  rpc CreateCoupon (CreateCouponRequest) returns (CreateCouponResponse);
  rpc UpdateCoupon (UpdateCouponRequest) returns (UpdateCouponResponse);
  rpc DeleteCoupon (DeleteCouponRequest) returns (DeleteCouponResponse);

  rpc AddApplicableProduct (AddApplicableProductRequest) returns (AddApplicableProductResponse);
  rpc AddCustomerCoupon (AddCustomerRequest) returns (AddCustomerResponse);
}

// Messages for GetCouponForProduct
message GetCouponForProductRequest {
  string coupon_code = 1;
  string product_id = 2;
  double product_price = 3;
}

message GetCouponForProductResponse {
  string coupon_code = 1;
  string description = 2;
  double original_price = 3;
  double discounted_price = 4;
  double discount_amount = 5;
  string discount_type = 6; // FlatAmount or Percentage
  string discount_label = 7; // e.g., "$10 off" or "20%"
  bool is_applicable = 8;
}

// Messages for GetBasketDiscount
message GetBasketDiscountRequest {
  string coupon_code = 1;
  string customer_id = 2;
  double order_total = 3;
  bool is_first_order = 4;
  int32 redemption_count = 5;
}

message GetBasketDiscountResponse {
  string coupon_code = 1;
  string description = 2;
  double original_order_total = 3;
  double discounted_order_total = 4;
  double discount_amount = 5;
  bool is_applicable = 6;
}

// Messages for CreateCoupon
message CreateCouponRequest {
  string coupon_code = 1;
  string name = 2;
  string description = 3;
  double flat_amount = 4; // Optional
  double percentage = 5; // Optional
  string start_date = 6; // ISO-8601 string
  string end_date = 7; // ISO-8601 string
  int32 max_uses = 8;
  int32 max_uses_per_customer = 9;
  double minimum_order_value = 10;
  bool is_first_time_order_only = 11;
}

message CreateCouponResponse {
  string coupon_id = 1;
  string coupon_code = 2;
}

// Messages for UpdateCoupon
message UpdateCouponRequest {
  string coupon_code = 1;
  string name = 2;
  string description = 3;
  double flat_amount = 4; // Optional
  double percentage = 5; // Optional
  string start_date = 6; // ISO-8601 string
  string end_date = 7; // ISO-8601 string
  int32 max_uses = 8;
  int32 max_uses_per_customer = 9;
  double minimum_order_value = 10;
  bool is_first_time_order_only = 11;
}

message UpdateCouponResponse {
  bool success = 1;
}

// Messages for DeleteCoupon
message DeleteCouponRequest {
  string coupon_code = 1;
}

message DeleteCouponResponse {
  bool success = 1;
}

// Messages for AddApplicableProduct
message AddApplicableProductRequest {
  string coupon_code = 1;
  string product_id = 2;
}

message AddApplicableProductResponse {
  bool success = 1;
}

// Messages for AddCustomerCoupon
message AddCustomerRequest {
  string coupon_code = 1;
  string customer_id = 2;
}

message AddCustomerResponse {
  bool success = 1;
}
